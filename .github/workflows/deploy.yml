name: 🚀 Deploy

on:
  push:
    branches:
      - main

jobs:
  changes:
    name: 🔎 Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{ steps.deploy_changes.outputs.DEPLOYABLE }}
      CONTENT: ${{ steps.content_changes.outputs.CONTENT }}
      REDIRECTS_CHANGED: ${{ steps.redirects_changes.outputs.REDIRECTS_CHANGED }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: 🔎 Determine deployable changes
        id: deploy_changes
        run: >-
          echo ::set-output name=DEPLOYABLE::$(node ./scripts/is-deployable.js ${{ github.sha }})

      - name: ❓ Deployable
        run: >-
          echo "DEPLOYABLE: ${{ steps.deploy_changes.outputs.DEPLOYABLE }}"

      - name: 🔎 Determine content changes
        id: content_changes
        run: >-
          echo ::set-output name=CONTENT::$(node ./scripts/get-changed-content.js ${{ github.sha }})

      - name: ❓ Content
        run: >-
          echo "CONTENT: ${{ steps.content_changes.outputs.CONTENT }}"

      - name: 🔎 Determine deleted content
        id: content_deletions
        run: >-
          echo ::set-output name=DELETED_CONTENT::$(node ./scripts/get-deleted-content.js ${{ github.sha }})

      - name: ❓ Deleted content
        run: >-
          echo "DELETED_CONTENT: ${{ steps.content_deletions.outputs.DELETED_CONTENT }}"

      - name: 🔎 Determine redirects changes
        id: redirects_changes
        run: >-
          echo ::set-output name=REDIRECTS_CHANGED::$(node ./scripts/is-redirects-changed.js ${{ github.sha }})

      - name: ❓ Redirects
        run: >-
          echo "REDIRECTS_CHANGED: ${{ steps.redirects_changes.outputs.REDIRECTS_CHANGED }}"

  deploy:
    name: 🚀 Deploy
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 🥶 Cache dependencies
        if: $${{ !env.ACT }}
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📦 Install npm packages
        run: npm install && npm run postinstall

      - name: 🛠 Build Remix app
        run: npm run build
        env:
          COMMIT_SHA: ${{ github.sha }}

      - name: 🎉 Publish
        uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          secrets: |
            POST_API_KEY
            COOKIE_SECRET
        env:
          POST_API_KEY: ${{ secrets.POST_API_KEY }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

  compile:
    name: 🛠 Compile MDX
    if: needs.changes.outputs.CONTENT != ''
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 🥶 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: 📦 Install npm packages
        run: cd ./scripts/mdx && npm install

      - name: 🚀 Compile and post MDX
        run: cd ./scripts/mdx && node ./compile-mdx.mjs --root ../../ --json --file ${{ needs.changes.outputs.CONTENT }} --delete ${{ needs.changes.outputs.DELETED_CONTENT }}
        env:
          API_URL: ${{ secrets.API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}

      - name: 🚀 Update content sha
        run: cd ./scripts/mdx && node ./update-content-sha.js
        env:
          COMMIT_SHA: ${{ github.sha }}
          API_URL: ${{ secrets.API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}

  redirects:
    name: ♻️ Update Redirects
    if: needs.changes.outputs.REDIRECTS_CHANGED == 'true'
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 🥶 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: 🚀 Update redirects
        run: cd ./scripts && node ./update-redirects.js
        env:
          API_URL: ${{ secrets.API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}
